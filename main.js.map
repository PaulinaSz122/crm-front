{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/clients-list/client-form/client-form.component.css","webpack:///./src/app/components/clients-list/client-form/client-form.component.html","webpack:///./src/app/components/clients-list/client-form/client-form.component.ts","webpack:///./src/app/components/clients-list/client-show/client-show.component.css","webpack:///./src/app/components/clients-list/client-show/client-show.component.html","webpack:///./src/app/components/clients-list/client-show/client-show.component.ts","webpack:///./src/app/components/clients-list/clients-list.component.css","webpack:///./src/app/components/clients-list/clients-list.component.html","webpack:///./src/app/components/clients-list/clients-list.component.ts","webpack:///./src/app/components/phones/phones-form/phones-form.component.css","webpack:///./src/app/components/phones/phones-form/phones-form.component.html","webpack:///./src/app/components/phones/phones-form/phones-form.component.ts","webpack:///./src/app/components/phones/phones-show/phones-show.component.css","webpack:///./src/app/components/phones/phones-show/phones-show.component.html","webpack:///./src/app/components/phones/phones-show/phones-show.component.ts","webpack:///./src/app/components/phones/phones.component.css","webpack:///./src/app/components/phones/phones.component.html","webpack:///./src/app/components/phones/phones.component.ts","webpack:///./src/app/configs/globalVariables.ts","webpack:///./src/app/models/Klient.ts","webpack:///./src/app/models/Telefony.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/app/services/phones.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { ClientsListComponent } from './components/clients-list/clients-list.component';\r\nimport { ClientShowComponent } from './components/clients-list/client-show/client-show.component';\r\nimport { ClientFormComponent } from './components/clients-list/client-form/client-form.component';\r\nimport { PhonesComponent } from './components/phones/phones.component';\r\nimport { PhonesShowComponent } from './components/phones/phones-show/phones-show.component';\r\nimport { PhonesFormComponent } from './components/phones/phones-form/phones-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AppComponent },\r\n  { path: 'clients', component: ClientsListComponent },\r\n  { path: 'clients/show/:id', component: ClientShowComponent },\r\n  { path: 'clients/form', component: ClientFormComponent },\r\n  { path: 'clients/form/:id', component: ClientFormComponent },\r\n  { path: 'clients/show/:pesel', component: ClientFormComponent },\r\n  { path: 'phones', component: PhonesComponent },\r\n  { path: 'phones/form', component: PhonesFormComponent },\r\n  { path: 'phones/form/:id', component: PhonesFormComponent },\r\n  { path: 'clients/show/:idklienta', component: PhonesFormComponent },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ClientsListComponent } from './components/clients-list/clients-list.component';\r\nimport { ClientFormComponent } from './components/clients-list/client-form/client-form.component';\r\nimport { ClientShowComponent } from './components/clients-list/client-show/client-show.component';\r\nimport { ClientService } from './services/client.service';\r\nimport { PhonesService } from './services/phones.service';\r\nimport { PhonesComponent } from './components/phones/phones.component';\r\nimport { PhonesShowComponent } from './components/phones/phones-show/phones-show.component';\r\nimport { PhonesFormComponent } from './components/phones/phones-form/phones-form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ClientsListComponent,\r\n    ClientFormComponent,\r\n    ClientShowComponent,\r\n    PhonesComponent,\r\n    PhonesShowComponent,\r\n    PhonesFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    ClientService, \r\n    PhonesService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50cy1saXN0L2NsaWVudC1mb3JtL2NsaWVudC1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form (submit)=\\\"save()\\\">\\r\\n  <label>Imię:</label>\\r\\n  <input type=\\\"text\\\" name=\\\"imie\\\" required [(ngModel)]=\\\"client.imie\\\" /><br />\\r\\n  <label>Nazwisko:</label>\\r\\n  <input type=\\\"text\\\" name=\\\"nazwisko\\\" required [(ngModel)]=\\\"client.nazwisko\\\" /><br />\\r\\n  <label>PESEL:</label>\\r\\n  <input type=\\\"text\\\" name=\\\"pesel\\\" required [(ngModel)]=\\\"client.pesel\\\" /><br />\\r\\n  <label>Adres zamieszkania:</label>\\r\\n  <input type=\\\"text\\\" name=\\\"adres_zam\\\" required [(ngModel)]=\\\"client.adres_zam\\\" /><br />\\r\\n  <label>Adres kontaktowy:</label>\\r\\n  <input type=\\\"text\\\" name=\\\"adres_kon\\\" required [(ngModel)]=\\\"client.adres_kon\\\" /><br />\\r\\n  <label>Telefon:</label>\\r\\n  <input type=\\\"text\\\" name=\\\"telefon\\\" required [(ngModel)]=\\\"client.telefon\\\" /><br />\\r\\n  <label>Adres E-Mail:</label>\\r\\n  <input type=\\\"text\\\" name=\\\"email\\\" required [(ngModel)]=\\\"client.email\\\" />\\r\\n  <br /><br />\\r\\n  <button>Zapisz!</button>\\r\\n</form>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Klient } from '../../../models/Klient';\r\nimport { ClientService } from '../../../services/client.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-client-form',\r\n  templateUrl: './client-form.component.html',\r\n  styleUrls: ['./client-form.component.css']\r\n})\r\nexport class ClientFormComponent implements OnInit, OnDestroy {\r\n\r\n  subscriptions: Subscription[] = [];\r\n\r\n  client: Klient = new Klient();\r\n\r\n  constructor(private clientService: ClientService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(data => {\r\n      console.log(data)\r\n      if (data.has('id')) {\r\n        this.client.id = parseInt(data.get('id'), 10);\r\n        this.getClient();\r\n      }\r\n    })\r\n  }\r\n\r\n  getClient() {\r\n    this.subscriptions.push(this.clientService.getClient(this.client.id).subscribe(\r\n      (data: Klient) => {\r\n        this.client = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    ));\r\n  }\r\n\r\n  save() {\r\n    console.log(this.client);\r\n    this.subscriptions.push(this.clientService.postClient(this.client).subscribe(\r\n      data => {\r\n        console.log('Powodzenie: ', data);\r\n        this.router.navigate(['clients'])\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    ));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(x => x.unsubscribe());\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50cy1saXN0L2NsaWVudC1zaG93L2NsaWVudC1zaG93LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form (submit)=\\\"searchClient()\\\">\\r\\n  <label>Podaj PESEL</label>\\r\\n  <input type=\\\"text\\\" name=\\\"pesel\\\" required [(ngModel)]=\\\"pesel\\\" /><br />\\r\\n  <button>Szukaj</button>\\r\\n</form>\\r\\n\\r\\n<br/><br/>\\r\\n\\r\\n<table border=\\\"1\\\">\\r\\n<th>\\r\\n    Id\\r\\n</th>\\r\\n<th>\\r\\n    Imię\\r\\n</th>\\r\\n<th>\\r\\n    Nazwisko\\r\\n</th>\\r\\n<th>\\r\\n    PESEL\\r\\n</th>\\r\\n<th>\\r\\n    Adres zameldowania\\r\\n</th>\\r\\n<th>\\r\\n    Adres korespondencyjny\\r\\n</th>\\r\\n<th>\\r\\n    Telefon kontaktowy\\r\\n</th>\\r\\n<th>\\r\\n    e-mail\\r\\n</th>\\r\\n<tr *ngFor=\\\"let client of clients\\\"> -->\\r\\n    <!--wykonuje się pętla dla listy lists (nazwa taka jak w KlienciResource) -->\\r\\n    <td>{{ client.id }}</td>\\r\\n    <td>{{ client.imie }}</td>\\r\\n    <td>{{ client.nazwisko }}</td>\\r\\n    <td>{{ client.pesel }}</td>\\r\\n    <td>{{ client.adres_zam }}</td>\\r\\n    <td>{{ client.adres_kon }}</td>\\r\\n    <td>{{ client.telefon }}</td>\\r\\n    <td>{{ client.email }}</td>\\r\\n    <td><button [routerLink]=\\\"['form', client.id]\\\"> Edytuj </button></td>\\r\\n    <td><button (click)=\\\"deleteClient(client.id)\\\"> Usuń </button></td>\\r\\n</tr>\\r\\n</table>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-client-show',\r\n  templateUrl: './client-show.component.html',\r\n  styleUrls: ['./client-show.component.css']\r\n})\r\nexport class ClientShowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50cy1saXN0L2NsaWVudHMtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form (submit)=\\\"searchClient(pesel)\\\">\\r\\n    <label>Podaj PESEL</label>\\r\\n    <input type=\\\"text\\\" name=\\\"pesel\\\" required [(ngModel)]=\\\"pesel\\\" />\\r\\n    <button>Szukaj</button>\\r\\n  </form>\\r\\n  <br/>\\r\\n<button (click)=\\\"getAllClients()\\\">Pokaż wszystko</button>\\r\\n<button routerLink=\\\"form\\\">Dodaj</button>\\r\\n  <br/><br/>\\r\\n  <table border=\\\"1\\\">\\r\\n  <th>\\r\\n      Id\\r\\n  </th>\\r\\n  <th>\\r\\n      Imię\\r\\n  </th>\\r\\n  <th>\\r\\n      Nazwisko\\r\\n  </th>\\r\\n  <th>\\r\\n      PESEL\\r\\n  </th>\\r\\n  <th>\\r\\n      Adres zameldowania\\r\\n  </th>\\r\\n  <th>\\r\\n      Adres korespondencyjny\\r\\n  </th>\\r\\n  <th>\\r\\n      Telefon kontaktowy\\r\\n  </th>\\r\\n  <th>\\r\\n      e-mail\\r\\n  </th>\\r\\n  <tr *ngFor=\\\"let client of clients\\\">\\r\\n      <!--wykonuje się pętla dla listy lists (nazwa taka jak w KlienciResource)-->\\r\\n      <td>{{ client.id }}</td>\\r\\n      <td>{{ client.imie }}</td>\\r\\n      <td>{{ client.nazwisko }}</td>\\r\\n      <td>{{ client.pesel }}</td>\\r\\n      <td>{{ client.adres_zam }}</td>\\r\\n      <td>{{ client.adres_kon }}</td>\\r\\n      <td>{{ client.telefon }}</td>\\r\\n      <td>{{ client.email }}</td>\\r\\n      <td><button [routerLink]=\\\"['form', client.id]\\\"> Edytuj </button></td>\\r\\n      <td><button (click)=\\\"deleteClient(client.id)\\\"> Usuń </button></td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { Klient } from '../../models/Klient';\r\nimport { ClientService } from '../../services/client.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-clients-list',\r\n  templateUrl: './clients-list.component.html',\r\n  styleUrls: ['./clients-list.component.css']\r\n})\r\nexport class ClientsListComponent implements OnInit, OnDestroy {\r\n\r\n  title = 'crm-front';\r\n  clients: Klient[] = [];\r\n  client: Klient;\r\n  pesel: string;\r\n\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private clientService: ClientService,\r\n              private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllClients(); }\r\n\r\n  getAllClients() {\r\n    this.subscriptions.push(this.clientService.getAllClients().subscribe(\r\n      (data: Klient[]) => {\r\n        this.clients = data;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    ));\r\n  }\r\n\r\n  addClient() { }\r\n\r\n  deleteClient(id: number) {\r\n    if (confirm(`Czy chcesz usunąć klienta o id=${id}?`)) {\r\n      this.subscriptions.push(\r\n        this.clientService.deleteClient(id).subscribe(\r\n          data => {\r\n            console.log('Powodzenie: ', data);\r\n            this.getAllClients();\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  searchClient(pesel: string) {\r\n    this.subscriptions.push(this.clientService.searchClient(pesel).subscribe(\r\n      (data: Klient[]) => {\r\n        this.clients = data;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    ));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(x => x.unsubscribe());\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGhvbmVzL3Bob25lcy1mb3JtL3Bob25lcy1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form (submit)=\\\"save()\\\">\\r\\n    <label>Numer</label>\\r\\n    <input type=\\\"text\\\" name=\\\"imie\\\" required [(ngModel)]=\\\"phone.numer\\\" /><br />\\r\\n    <label>Postpaid</label>\\r\\n    <input type=\\\"text\\\" name=\\\"nazwisko\\\" required [(ngModel)]=\\\"phone.postpaid\\\" /><br />\\r\\n    <label>Stan konta</label>\\r\\n    <input type=\\\"text\\\" name=\\\"pesel\\\" required [(ngModel)]=\\\"phone.stan_konta\\\" /><br />\\r\\n    <label>Darmowe rozmowy</label>\\r\\n    <input type=\\\"text\\\" name=\\\"adres_zam\\\" required [(ngModel)]=\\\"phone.darmowe_rozmowy\\\" /><br />\\r\\n    <label>Darmowe smsy</label>\\r\\n    <input type=\\\"text\\\" name=\\\"adres_kon\\\" required [(ngModel)]=\\\"phone.darmowe_smsy\\\" /><br />\\r\\n    <label>Darmowy internet</label>\\r\\n    <input type=\\\"text\\\" name=\\\"telefon\\\" required [(ngModel)]=\\\"phone.darmowy_internet\\\" /><br />\\r\\n    <label>Id klienta</label>\\r\\n    <input type=\\\"text\\\" name=\\\"id_klienta\\\" required [(ngModel)]=\\\"phone.id_klienta\\\" /><br />\\r\\n    <br /><br />\\r\\n    <button>Zapisz!</button>\\r\\n  </form>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {Telefony } from '../../../models/Telefony';\r\nimport { PhonesService } from '../../../services/phones.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-phones-form',\r\n  templateUrl: './phones-form.component.html',\r\n  styleUrls: ['./phones-form.component.css']\r\n})\r\nexport class PhonesFormComponent implements OnInit, OnDestroy {\r\n\r\n  subscriptions: Subscription[] = [];\r\n\r\n  phone: Telefony = new Telefony();\r\n\r\n  constructor(private phonesService: PhonesService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(data => {\r\n      console.log(data)\r\n      if (data.has('id')) {\r\n        this.phone.id = parseInt(data.get('id'), 10);\r\n        this.getPhones();\r\n      }\r\n    })\r\n  }\r\n\r\n  getPhones() {\r\n    this.subscriptions.push(this.phonesService.getPhone(this.phone.id).subscribe(\r\n      (data: Telefony) => {\r\n        this.phone = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    ));\r\n  }\r\n\r\n  save() {\r\n    console.log(this.phone);\r\n    this.subscriptions.push(this.phonesService.postPhone(this.phone).subscribe(\r\n      data => {\r\n        console.log('Powodzenie: ', data);\r\n        this.router.navigate(['phones'])\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    ));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(x => x.unsubscribe());\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGhvbmVzL3Bob25lcy1zaG93L3Bob25lcy1zaG93LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form (submit)=\\\"searchPhones(id)\\\">\\r\\n    <label>Podaj ID klienta</label>\\r\\n    <input type=\\\"text\\\" name=\\\"id\\\" required [(ngModel)]=\\\"id\\\" />\\r\\n    <button>Szukaj</button>\\r\\n  </form>\\r\\n  \\r\\n  <br/><br/>\\r\\n  <table border=\\\"1\\\">\\r\\n      <th>\\r\\n          Id\\r\\n      </th>\\r\\n  <th>\\r\\n      Numer\\r\\n  </th>\\r\\n  <th>\\r\\n      Postpaid\\r\\n  </th>\\r\\n  <th>\\r\\n      Stan Konta\\r\\n  </th>\\r\\n  <th>\\r\\n     Darmowe rozmowy\\r\\n  </th>\\r\\n  <th>\\r\\n      Darmowe smsy\\r\\n  </th>\\r\\n  <th>\\r\\n      Darmowy internet\\r\\n  </th>\\r\\n  <th>\\r\\n      Id Klienta\\r\\n  </th>\\r\\n  \\r\\n  <tr *ngFor=\\\"let phone of phones\\\">\\r\\n      <td>{{ phone.id }}</td>\\r\\n      <td>{{ phone.numer }}</td>\\r\\n      <td>{{ phone.postpaid }}</td>\\r\\n      <td>{{ phone.stan_konta }}</td>\\r\\n      <td>{{ phone.darmowe_rozmowy }}</td>\\r\\n      <td>{{ phone.darmowe_smsy }}</td>\\r\\n      <td>{{ phone.darmowy_internet }}</td>\\r\\n      <td>{{ phone.idklienta }}</td>\\r\\n      <td><button [routerLink]=\\\"['form', phone.numer]\\\"> Edytuj </button></td>\\r\\n      <td><button (click)=\\\"deletePhone(phone.numer)\\\"> Usuń </button></td>\\r\\n  </tr>\\r\\n  </table>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-phones-show',\r\n  templateUrl: './phones-show.component.html',\r\n  styleUrls: ['./phones-show.component.css']\r\n})\r\nexport class PhonesShowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGhvbmVzL3Bob25lcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form (submit)=\\\"searchPhones(id)\\\">\\r\\n  <label>Podaj ID klienta</label>\\r\\n  <input type=\\\"text\\\" name=\\\"id\\\" required [(ngModel)]=\\\"id\\\" />\\r\\n  <button>Szukaj</button>\\r\\n</form>\\r\\n<button (click)=\\\"getAllPhones()\\\">Pokaż wszystko</button>\\r\\n<button routerLink=\\\"form\\\">Dodaj</button>\\r\\n<br/>\\r\\n<br/><br/>\\r\\n<table border=\\\"1\\\">\\r\\n    <th>\\r\\n        Id\\r\\n    </th>\\r\\n<th>\\r\\n    Numer\\r\\n</th>\\r\\n<th>\\r\\n    Postpaid\\r\\n</th>\\r\\n<th>\\r\\n    Stan Konta\\r\\n</th>\\r\\n<th>\\r\\n   Darmowe rozmowy\\r\\n</th>\\r\\n<th>\\r\\n    Darmowe smsy\\r\\n</th>\\r\\n<th>\\r\\n    Darmowy internet\\r\\n</th>\\r\\n<th>\\r\\n    Id Klienta\\r\\n</th>\\r\\n\\r\\n<tr *ngFor=\\\"let phone of phones\\\">\\r\\n    <td>{{ phone.id }}</td>\\r\\n    <td>{{ phone.numer }}</td>\\r\\n    <td>{{ phone.postpaid }}</td>\\r\\n    <td>{{ phone.stan_konta }}</td>\\r\\n    <td>{{ phone.darmowe_rozmowy }}</td>\\r\\n    <td>{{ phone.darmowe_smsy }}</td>\\r\\n    <td>{{ phone.darmowy_internet }}</td>\\r\\n    <td>{{ phone.id_klienta }}</td>\\r\\n    <td><button [routerLink]=\\\"['form', phone.id]\\\"> Edytuj </button></td>\\r\\n    <td><button (click)=\\\"deletePhones(phone.id)\\\"> Usuń </button></td>\\r\\n</tr>\\r\\n</table>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { Telefony } from '../../models/Telefony';\r\nimport { PhonesService } from '../../services/phones.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-phones',\r\n  templateUrl: './phones.component.html',\r\n  styleUrls: ['./phones.component.css']\r\n})\r\nexport class PhonesComponent implements OnInit, OnDestroy {\r\n\r\n  title = 'crm-front';\r\n  phones: Telefony[] = [];\r\n  phone: Telefony;\r\n  idklienta: number;\r\n  id: number;\r\n\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(private phonesService: PhonesService,\r\n              private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllPhones(); }\r\n\r\n    getAllPhones() {\r\n    this.subscriptions.push(this.phonesService.getAllPhones().subscribe(\r\n      (data: Telefony[]) => {\r\n        this.phones = data;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    ));\r\n  }\r\n\r\n  addPhones() { }\r\n\r\n  deletePhones(id: number) {\r\n    if (confirm(`Czy chcesz usunąć numer?`)) {\r\n      this.subscriptions.push(\r\n        this.phonesService.deletePhone(id).subscribe(\r\n          data => {\r\n            console.log('Powodzenie: ', data);\r\n            this.getAllPhones();\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  searchPhones(idklienta: number) {\r\n    this.subscriptions.push(this.phonesService.searchByClientId(idklienta).subscribe(\r\n      (data: Telefony[]) => {\r\n        this.phones = data;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    ));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(x => x.unsubscribe());\r\n  }\r\n\r\n}\r\n","//export const serverURL = 'http://localhost:8080/';\r\nexport const serverURL = 'http://ec2-18-222-131-19.us-east-2.compute.amazonaws.com:8080';\r\n","export class Klient {\r\n    public id: number;\r\n    public imie: string;\r\n    public nazwisko: string;\r\n    public pesel: string;\r\n    public adres_zam: string;\r\n    public adres_kon: string;\r\n    public telefon: string;\r\n    public email: string;\r\n}\r\n","export class Telefony {\r\n    public id: number;\r\n    public numer: string;\r\n    public postpaid: boolean;\r\n    public stan_konta: number;\r\n    public darmowe_rozmowy: boolean;\r\n    public darmowe_smsy: boolean;\r\n    public darmowy_internet: boolean;\r\n    public id_klienta: number;\r\n    \r\n}\r\n\r\n\r\n   ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport * as globalConfig from '../configs/globalVariables'\r\nimport { Klient } from '../models/Klient';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n  private server = globalConfig.serverURL;\r\n\r\n  private allClientsURL = this.server + 'klienci/all';\r\n  private postClientURL = this.server + 'klienci/add';\r\n  private getClientURL = this.server + 'klienci/searchbyid/{id}';\r\n  private deleteClientURL = this.server + 'klienci/delete/{id}';\r\n  private searchClientURL = this.server + 'klienci/searchbypesel/{pesel}';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllClients() {\r\n    return this.http.get(this.allClientsURL);\r\n  }\r\n\r\n  postClient(client: Klient) {\r\n    return this.http.post(this.postClientURL, client);\r\n  }\r\n\r\n  getClient(id: number) {\r\n    const url = this.getClientURL.replace('{id}', id.toString());\r\n    return this.http.get(url);\r\n  }\r\n\r\n  deleteClient(id: number) {\r\n    const url = this.deleteClientURL.replace('{id}', id.toString());\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  searchClient(pesel: String){\r\n    const url = this.searchClientURL.replace('{pesel}', pesel.toString());\r\n    return this.http.get(url);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport * as globalConfig from '../configs/globalVariables'\r\nimport { Telefony } from '../models/Telefony';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhonesService {\r\n\r\n  private server = globalConfig.serverURL;\r\n  private allPhoneURL = this.server + 'telefon/all';\r\n  private postPhoneURL = this.server + 'telefon/add';\r\n  private getIdURL = this.server + 'telefon/searchbyid/{id}';\r\n  private deletePhoneURL = this.server + 'telefon/delete/{id}';\r\n  private searchByClientIdURL = this.server + 'telefon/searchbyidklienta/{idklienta}';\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllPhones() {\r\n    return this.http.get(this.allPhoneURL);\r\n  }\r\n\r\n  postPhone(phone: Telefony) {\r\n    return this.http.post(this.postPhoneURL, phone);\r\n  }\r\n\r\n  getPhone(id: number) {\r\n    const url = this.getIdURL.replace('{id}', id.toString());\r\n    return this.http.get(url);\r\n  }\r\n\r\n  deletePhone(id: number) {\r\n    const url = this.deletePhoneURL.replace('{id}', id.toString());\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  searchByClientId(idklienta: number){\r\n    const url = this.searchByClientIdURL.replace('{idklienta}', idklienta.toString());\r\n    return this.http.get(url);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}